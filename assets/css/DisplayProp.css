/* .displayElements {
    display: block;
    width: 50%;
    height: 80%;
    margin: 80px;
    border: 1px solid red;
}

#div1 {
    background-color: lightseagreen;
    display: inline-flexbox;
    height: 90px;
}

#div1:hover {
    background-color: lightseagreen;
    display: block;
    height: 90px;
}

#div2 {
    background-color: yellow;
    display: inline-flex;
    height: 90px;
}

#div2:hover {
    background-color: yellow;
    display: block;
    height: 90px;
}

#div3 {
    background-color: mediumvioletred;
    display: inline-flex;
    height: 90px;
}  */

/* 
display property values:
    inline - Displays an element as an inline element (like <span>). Any height and width properties will have no effect
    block - Displays an element as a block element (like <p>). It starts on a new line, and takes up the whole width
    inline-block - Displays an element as an inline-level block container. The element itself is formatted as an inline element, but you can apply height and width values
    none - The element is completely removed
    flex - Displays an element as a block-level flex container
    grid - Displays an element as a block-level grid container
    table - Let the element behave like a <table> element
    table-cell - Let the element behave like a <td> element
    table-row - Let the element behave like a <tr> element
    initial - Sets this property to its default value.
    inherit - Inherits this property from its parent element.

*/

/* #main {
    width: 400px;
    height: 400px;
    border: 1px solid #c3c3c3;
    display: flex;
    flex-direction: row-reverse;
}

#main div {
    width: 50px;
    height: 50px;
} */

p { 
    color: red; 
    width: 50px;
    background-color: lightgoldenrodyellow;
}
p.ex1 { display: none; }
p.ex2 { display: inline; }
p.ex3 { display: block; }
p.ex4 { display: inline-block; }